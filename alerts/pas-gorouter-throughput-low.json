{
    "minutes": $config.pasGoRouterThroughputLow.minutes,
    "name": "PAS Gorouter Throughput Higher Than Expected",
    "tags": {
      $config.pasGoRouterThroughputLow.customerTags
    },
    "alertType": "THRESHOLD",
    "metricsUsed": [
      "pcf.gorouter.total_requests.delta"
    ],
    "condition": "",
    "conditions": {
      "warn": "avg(ts(pcf.gorouter.total_requests.delta, foundation=\"$config.foundation\")) > $config.pasGoRouterThroughputLow.conditions.warn",
      "severe": "avg(ts(pcf.gorouter.total_requests.delta, foundation=\"$config.foundation\")) > $config.pasGoRouterThroughputLow.conditions.severe"
    },
    "targets": {
      "warn": $config.pasGoRouterThroughputLow.targets.warn,
      "severe": $config.pasGoRouterThroughputLow.targets.severe
    },
    "conditionQBEnabled": false,
    "displayExpression": "avg(ts(pcf.gorouter.total_requests.delta, foundation=\"$config.foundation\"))",
    "displayExpressionQBEnabled": false,
    "additionalInformation": "This measures the number of requests completed by the Gorouter VM, emitted per Gorouter instance. The aggregation of these values across all Gorouters provide insight into the overall traffic flow of a deployment. Unusually high spikes, if not known to be associated with an expected increase in demand, could indicate a DDoS risk. For performance and capacity management, consider this metric a measure of router throughput per job, converting it to requests-per-second, by looking at the delta value of gorouter.total_requests and deriving back to 1s, or gorouter.total_requests.delta)/5, as this is a 5-second metric.\n\nFor optimizing the Gorouter, consider the requests-per-second derived metric in the context of router latency and Gorouter VM CPU utilization. From performance and load testing of the Gorouter, Pivotal has observed that at approximately 2500 requests per second, latency can begin to increase.\nACTIONS: \n(!) To increase throughput and maintain low latency, scale the Gorouters either horizontally or vertically and ensure that the system.cpu.user metric for the Gorouter stays in the suggested range of 60-70% CPU Utilization. For more information about the system.cpu.user metric, see VM CPU Utilization.",
    "targetInfo": $config.pasGoRouterThroughputLow.targetInfo
  }